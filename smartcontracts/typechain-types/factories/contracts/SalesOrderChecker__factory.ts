/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SalesOrderChecker,
  SalesOrderCheckerInterface,
} from "../../contracts/SalesOrderChecker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b506040518060400160405280601081526020017f4c415a595f4d41524b4554504c414345000000000000000000000000000000008152506040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250504660a081815250506100e581848461013360201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508061012081815250505050505050610233565b6000838383463060405160200161014e9594939291906101e0565b6040516020818303038152906040528051906020012090509392505050565b6000819050919050565b6101808161016d565b82525050565b6000819050919050565b61019981610186565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ca8261019f565b9050919050565b6101da816101bf565b82525050565b600060a0820190506101f56000830188610177565b6102026020830187610177565b61020f6040830186610177565b61021c6060830185610190565b61022960808301846101d1565b9695505050505050565b60805160a05160c05160e0516101005161012051603f61026e600039600050506000505060005050600050506000505060005050603f6000f3fe6080604052600080fdfea2646970667358221220530ac6e283f2eae07ba6edd0485bd1fbee83424e01f1e05713baf61aae583d5d64736f6c63430008090033";

type SalesOrderCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SalesOrderCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SalesOrderChecker__factory extends ContractFactory {
  constructor(...args: SalesOrderCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SalesOrderChecker> {
    return super.deploy(overrides || {}) as Promise<SalesOrderChecker>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SalesOrderChecker {
    return super.attach(address) as SalesOrderChecker;
  }
  override connect(signer: Signer): SalesOrderChecker__factory {
    return super.connect(signer) as SalesOrderChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SalesOrderCheckerInterface {
    return new utils.Interface(_abi) as SalesOrderCheckerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SalesOrderChecker {
    return new Contract(address, _abi, signerOrProvider) as SalesOrderChecker;
  }
}
